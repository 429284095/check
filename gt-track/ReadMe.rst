=================
Gt-Track
=================

.. contents:: 目录



human数据采集原则
========================

1. 特殊的自身有防刷功能的场景。
    音悦台的签到数据。
#. 新启用验证模块的前几个小时是，甚至前几天。
    gao7网的前五天的数据。
#. 公司里面人拖动的数据。
#. 小网站每天流量不大，但是又没有突发事件的数据。



细分数据类别
==================

1. PC的Web端
#. Mobile的Web端
#. 各种Web端UA都做一份


robot数据采集原则
=======================

1. 通过编写代码，在特定的页面下自己的轨迹数据。
#. 客户汇报的，明显有刷验证的页面。
#. 通过后台系统查看到的流量异常的情况。


实验数据采集流程
=====================

1. 确定需要的数据的时刻点和captcha_id
#. 下载相应时间段的weblog
#. 使用captcha_id进行过滤
    注意：不要使用refer过滤。因为有很多攻击的数据使用其它的refer来刷验证，这样会使数据缺少。
#. 将数据放在实验数据中心FTP目录下
#. 在测试中心进行备案。
    在测试中心先填写数据采集的记录表单进行备案


robot数据进一步提纯
======================

以yy的数据为例子。

1. 使用captcha_id过滤出指定验证模块的数据。
然后对ajax满足如下三个条件满足之一就过滤：

1. ajax里面的 referer 为http://129.*
#. ajax里面的 referer 为http://api.geetest.com*
#. new_user 字段为true的数据




算法研究过程
====================

见gt-research @刘忠雨



测试发布流程
===============

1. pkl文件发布。
    1. 放置一份到200数据服务器，以版本号来命名目录。
    #. 将pkl复制到/www/gt-server-new/gttrack目录。
#. 源码仓库发布。(方便后续追溯和回滚)
    1. 在gttrack目录下的__init__.py里面修改版本号。动态加载时需要。“年.月.日.版本号“ 例如：15.1.4.1
    #. 在ReadMe里面写指定的tag发布日志。本地提交并push。
    #. 在git上打tag，tag的名称和版本信息一致。（或者，直接运行release.py，然后再git push --tags）
    #. （后面由郑来统一写个批处理命令吧，否则每次这样搞太痛苦了）
#. 本地搭建gt-server-new运行
    1. REDIS配置到本地127.0.0.1,端口设置REDIS_PORT = 6379，备份设置BACKUP_REDIS = '127.0.0.1'
    #. MONGO_DB = '42.62.26.53:27017'启用
    #. 注释掉复制集MONGO_REPLSET
    #. ajaxcheck.py:注释掉其它的检测，只保留track。然后打印出track
    #. REDIS_HOST = '127.0.0.1'
    #. 如果只是一个人单机测试。那么直接修改hosts做映射。然后不用后续的步骤了。
    #. GT_API_SERVER配置成本机局域网IP （192.168.*.*）
    #. gethandler.py:里面的output的js里面的src的IP映射到本地
#. 本地gt-testcenter页面指向本地gt-server-new
#. 本地抽样测试
    1. 人能正常通过。PC端和移动端。少数几人进行抽样30次测试。
    #. 机器人能防住。使用go语言测试。刷30次
#. 和gt-server-new集成
    1. wget指定的tag文件到本地。（直接安装时没有成功，而且注意url后面需要有https://username:password@bitbucket***）
    #. pip install gttrack*.gz
    #. 重新启动进程应用新的版本gttrack
    #. 晓龙再写一个检查的脚本，形成发布的闭环。
#. 局部发布测试。先在一台公网机器上发布。并正反抽样测试。人和机器各10次。
    1. 修改本地hosts指向指定公网IP (42.62.40.133)
    2. 打开公网页面访问。可以发现一些服务器部署的问题。
#. 全网发布测试。在所有的公网机器上发布，并正反测试。人和机器各10次。
    1. 本地hosts不做任何指向。
    #. 后续运营人员持续跟进后台，和留意客户反馈。
    #. 如果有异常，随时做好回滚的准备。


备注：
以后测试的流程简化和高效化。

1. 决策树的效果测试。由纯度比较高的带标签实验数据来验证。@刘忠雨给出评估报告。
#. 决策树的发布测试。手动测试，目的：对gt-server-new和集成做测试。由QA搭建环境，逐步测试和发布。



发布日志
===========

2.15.9.18.1
----------------------

- 重新打了一个tag,在VERSION里面也更新了


2.15.7.30.1
---------------------------

- 增加了新的特征值
- 配合新的RF随机森林文件


2.15.6.30.1
-----------------------

1. 加入了76社区的id到黑名单里面


2.15.6.19.3
-----------------------

1. 集成xp_chrome_ocs
#. 增加178和黑龙江电视台到重点名单


2.15.6.17.1
-----------------------

1. 集成common_ocs和old_chrome_ocs的RF判定功能（针对暴漫）

2.15.6.16.2(舍弃)
-----------------------

1. 增加ocs_common的模型库
#. 此版本发现误判率很高，做了服务器紧急回退。


2.15.6.15.3
------------------------

1. 增加两个特征
#. 增加ski-learn的文件
#. 修复mobile的bug




2.15.5.24.3
-------------------

1. 其他网站开启随机森林
#. 区分不同分类器输出


2.15.5.22.2
-------------------

1. 将所有的规则都用在包括YY的一些重点网站，容易被刷的，如17173、东航等，参见 tower 的日志
#. 其它网站暂时只用实时封禁策略
#. 2.15.5.22.1 没有修改VERSION，重新打tag

2.15.5.20.2
-------------------

1. 将所有的规则都仅仅用在YY上，包括SVM也是，主要是降低对其它网站的作用
#. 其它网站暂时只用实时封禁策略


2.15.5.20.1
----------------------

1. 针对YY20号下午2～3点的数据做的check_rule的更新
#. 上线之后，YY的效果效果能够达到90%


2.15.5.19.3
-------------------------

1. 更新了ie8的ocs文件及判断
#. 今天代码中的前两个tag弃用


2.15.5.18.2
-------------------

1. 针对yy在刷的三个模式，进行checkrule的更新
#. 人误判率 5%， ie7封禁率100%， ie8封禁率96%， winhttp封禁率99%
#. 2.15.5.18.1的版本有一个缩进的代码错误，修复后就演进了一个新版本


2.15.5.17.2
--------------------

1. 将之前针对YY的模式的仅仅应用成yy
#. 除YY外的forbidden量，将会下载8%
#. 现在将YY这个研究对象独立出来进行check_rule的规则



2.15.5.17.1
-----------------

1. 有一个缩进的bug，修复后就是2.15.5.17.2版本





2.15.5.16.2
--------------------

1. 增加rule，排除异常UA
#. 发现有四个人同时在刷，有四种模式。导致特征不明显。使用UA细分找到了模式，针对性的做了规则。


2.15.5.16.1
-----------------

1. 增加了yy的一个check_rule,针对IE8


2.15.5.15.1
-----------------

1. 增加sequence_percent的特征@刘忠雨


2.15.5.13.1
----------------------

1. 加入了ie9及以上的OCS文件接口
#. gt-server和此包的集成接口发生变化了。


2.15.5.7.1
---------------------

1. 下午把随机森林给去掉了。因为今天误防Umeng的机率太大
#. 以前的go语言的机器可以防住。因为有新的策略。
#. 随机森林作为一种方案目前已经在方案上落伍于新策略，决定今后放弃此方案了。



2.15.5.6.1
------------------

1. 针对凌晨YY的数据，做了规则的更新


2.15.5.5.2
--------------------

1. 修复SVM_Chrome里面的UA的bug。
#. 可以将今天的tgbus的刷票行为的85%给封住。



2.15.5.5.1
--------------------

1. add yy check_rule


2.15.5.4.4
--------------------

1. 新增加了svm的模型
2. RF的函数的接口发生了变化
3. 修复了passtime在计算过程的问题。
4. 修复merge_zero中append了n时导致的一些引用传值的问题


2.15.5.3.1
--------------------

1. 更新了YY的防御模式
2. 18000下降到8000

2.15.5.2.2
-------------------

1. 五一期间针对YY的情况做了更新规则，找到了模式。


2.15.4.28.2
-----------------------

1. 添加ptbus的规则

2.15.4.16.1
-----------------------

1. 加入了暴走漫画的新模式


2.15.4.5.2
---------------------

1. 可乐盘上遨游浏览器的起始坐标不为0,0。修复此bug @zzy


2.15.4.4.2
----------------------

1. poco and new buffer


15.3.20.1
----------------------

1. 加入了YY今天刷子的一个checkrule @刘忠雨


15.3.18.1
----------------------

1. 解决了随机森林的性能问题


15.3.6.2
-----------------------

1. 宇哥将临时分支进行了合并。
#. 增加了一个决策，防poco的
#. 修复了昨天上线的bug。
#. 已经放到全网上可以正常使用了。


15.3.5.1
-----------------
1. 增加了一个决策，防poco的
#. 这个里面的代码有问题，不要在线上使用了。（因为XSH没有将宇哥以前的代码基础上进行变动）

15.2.12.1
-----------------
1. 在一个临时分支上，tag正确，但是VERSION没有修改好。
#. 可以正常使用


15.1.22.4
-----------------------
1. 去掉了random forest
#. 增加了决策树，复原。
#. 针对6rooms的修改规则。gitk 


15.1.21.4
-----------------------

1. 加入了requirements.txt到setup.py中。
#. 修改了pkl文件的引用路径到gt-server-new中。

15.1.21.1
-----------------------

1. 删除了决策树
#. 启用使用Random Forest




15.1.16.1
-----------------------

1. 在__init__.py里面加入 VERSION
#. 删除decision_tree里面现行无用的东西。

15.1.14.1
-----------------------

1. 将自定义的决策规则和自动生成的决策规则独立成两个函数
#. 删除了random forest文件

15.1.13.1
-----------------------

1. 添加了random forest文件


15.1.5.1
-----------------------

1. 针对YY新上线的数据做了划分。这次 对机器防范做得更好。但是对人的防范度从1%上升到了8%
#. 此方法副作用比较大。但是还是上线了。@刘忠雨，@张振宇

14.12.31.1
-----------------------

1. 元旦前实时封禁没有上线，先在决策树上顶一顶


14.12.26.1
----------------

1. 重建了结构，做成了setup.py的打包结构。
#. 以后和gt-server-new的合并方式会有所变化。
#. 内容没有变化。


14.12.22v2
----------------
主要更新：

1. 加入三个特征：x_sorted_advance_entropy,y_sorted_entropy,t_sorted_entropy作一个联合规则封禁yy

14.12.19v1
----------------
主要更新：

1. 加入新的x_1_pcc特征，对yy的攻击防御十分有效。
#. 这次紧急更新，有了这个新的特征之后决策树还需要更新一个稳定版本 。

14.12.17v1
--------------

主要更新：

1. 加入自相关系数的特征by邓周。
#. 加入yy1211号的数据作为机器人训练
#. 现在训练集达到10万规模，由于人具有同分布的性质，所以现在人的识别率具有很高的置信度。

14.12.08v1
--------------

主要更新：

1. 使用gao7网初始注册时的数据进行人的训练。
#. 将yy网近期的攻击数据作为robot
#. 使用音悦台的数据作为人的验证数据
#. 人的区分度更高，yy的都可以防住
#. by 刘忠雨

14.12.03v1
--------------

主要更新：

1. 目前的go-lang,e-lang区分度比较高。
#. 人的区分度比较高
#. by 刘忠雨